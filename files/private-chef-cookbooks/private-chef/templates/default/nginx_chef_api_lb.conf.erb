  server {
    listen <%= @helper.listen_port(@server_proto) %>;
    server_name <%= @server_name %>;

    access_log <%= @helper.access_log(@server_proto) %> opscode;
    <% if @server_proto == "https" %>
      ssl on;
      ssl_certificate <%= @ssl_certificate %>;
      ssl_certificate_key <%= @ssl_certificate_key %>;

      ssl_session_timeout 5m;

      ssl_protocols <%= @ssl_protocols %>;
      ssl_ciphers <%= @ssl_ciphers %>;
      ssl_prefer_server_ciphers on;
    <% end %>
    root <%= File.join(@dir, "html") %>;
    client_max_body_size <%= @client_max_body_size %>;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto <%= @x_forwarded_proto %>;
    proxy_pass_request_headers on;
    proxy_connect_timeout   1;
    proxy_send_timeout      300;
    proxy_read_timeout      300;

    error_page 404 =404 /404.html;
    error_page 503 =503 /503.json;

    location /version {
      types { }
      default_type text/plain;
      alias /opt/opscode/version-manifest.txt;
    }

    location /docs {
      index index.html ;
      alias /opt/opscode/docs;
    }

    # bookshelf
    location ~ "/<%= node['private_chef']['opscode-erchef']['s3_bucket'] %>/{0,1}.*$" {
      proxy_pass http://bookshelf;
    }

    # object ACL requests go to opscode-account service
    <%= @helper.account_api("^/organizations/[a-z0-9\-_]+?/.*?/_acl.*$", :account) %>

    # pushy
    <%= @helper.pushy_api("^/organizations/[a-z0-9\-_]+?/pushy/{0,1}") %>

    # pushy status endpoint
    location ~ "^/pushy/_status$" {
        set $my_upstream opscode_pushy;
        proxy_redirect http://$my_upstream /;
        proxy_pass http://$my_upstream;
    }

    # search requests
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/(?:search)/.+$") %>
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/(?:search)/?$") %>

    # erchef
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/nodes/{0,1}.*$") %>
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/environments/[^/]+/nodes$") %>
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/principals/{0,1}.*$") %>
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/roles/{0,1}.*$") %>
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/data/{0,1}.*$") %>
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/environments/{0,1}.*$") %>
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/_status/{0,1}.*$") %>
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/cookbooks/{0,1}.*$") %>
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/sandboxes/{0,1}.*$") %>
    <%= @helper.chef_api("^/_status") %>

    # opscode reporting endpoints
    <%= @helper.reporting_api("^/organizations/[a-z0-9\-_]+?/reports/.*$") %>
    <%= @helper.reporting_api("^/reports/.*$") %>

    # opscode-account service endpoints
    <%= @helper.account_api("^/organizations/[a-z0-9\-_]+?/clients/{0,1}.*$", 'couchdb_clients') %>
    <%= @helper.account_api("^/organizations/[a-z0-9\-_]+?/(?:groups|users|containers|association_requests)/{0,1}.*$", :account) %>
    <%= @helper.account_api("^/(?:organizations|users)/{0,1}$", :account) %>
    <%= @helper.account_api("^/organizations/[a-z0-9\-_]+/{0,1}$", :account) %>
    <%= @helper.account_api("^/users/[a-z0-9\-_]+/{0,1}$", :account) %>
    <%= @helper.account_api("^/users/[a-z0-9\-_]+/{0,1}/association_requests/{0,1}.*$", :account) %>
    <%= @helper.account_api("^/users/[a-z0-9\-_]+/organizations/{0,1}$", :account) %>
    <%= @helper.account_api("^/verify_password$", :account) %>
    <%= @helper.account_api("^/authenticate_user$", :account) %>

    location ~ "^/(?:stylesheets|javascripts|images|facebox|css)/{0,1}.*$" {
      if ($http_x_chef_version ~* "^(\d+\.\d+?)\..+$") {
        error_page 400 =400 /400-chef_client_manage.json;
        return 400;
      }

      # When configured to allow webui access to only certain subnets,
      # create "allow" rules for them, followed by deny all.
      # NOTE: This snippet is duplicated for the "/" location below.
      # Copy changes you make here down there as well.
      <% if @allowed_webui_subnets && !@allowed_webui_subnets.empty? %>
        <% @allowed_webui_subnets.each do |subnet| %>
      allow <%= subnet %>;
        <% end %>
      deny all;
      <% end %>

      proxy_pass http://opscode_webui;
      proxy_pass_request_headers off;
      proxy_cache webui-cache;
      proxy_cache_valid 200 302 300m;
      proxy_cache_valid 404 1m;
    }

    location / {
      # any request from a chef client that reaches this point
      # is for a resource/route that doesn't exist.
      if ($http_x_chef_version ~* "^(\d+\.\d+?)\..+$") {
         error_page 404 =404 /404.json;
         return 404;
      }

      # When configured to allow webui access to only certain subnets,
      # create "allow" rules for them, followed by deny all.
      # NOTE: This snippet is duplicated for the static assets locations above.
      # Copy changes you make here up there as well.
      <% if @allowed_webui_subnets && !@allowed_webui_subnets.empty? %>
        <% @allowed_webui_subnets.each do |subnet| %>
      allow <%= subnet %>;
        <% end %>
      deny all;
      <% end %>


      proxy_pass http://opscode_webui;
    }
  }
