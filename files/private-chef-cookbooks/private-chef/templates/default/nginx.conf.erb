<%-
  def select_upstream(upstream, alternative="opscode_webui", proto="http") 
<<-EOS
      set $my_upstream #{upstream};
      if ($http_x_ops_userid = "") {
        set $my_upstream #{alternative};
      }
      proxy_redirect #{proto}://$my_upstream /; 
      proxy_pass #{proto}://$my_upstream; 
EOS
  end
-%>

user <%= node['private_chef']['user']['username'] %> <%= node['private_chef']['user']['username']%>;
worker_processes <%= @worker_processes %>;
error_log /var/log/opscode/nginx/error.log<%= node['private_chef']['lb']['debug'] ? " debug" : "" %>;

daemon off;

events {
  worker_connections <%= @worker_connections %>;
}

http {
  log_format opscode '$remote_addr - $remote_user [$time_local]  '
                    '"$request" $status "$request_time" $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" "$upstream_addr" "$upstream_status" "$upstream_response_time" "$http_x_chef_version" "$http_x_ops_sign" "$http_x_ops_userid" "$http_x_ops_timestamp" "$http_x_ops_content_hash" $request_length';

  sendfile <%= @sendfile %>;
  tcp_nopush <%= @tcp_nopush %>;
  tcp_nodelay <%= @tcp_nodelay %>;

  keepalive_timeout <%= @keepalive_timeout %>;

  gzip <%= @gzip %>;
  gzip_http_version <%= @gzip_http_version %>;
  gzip_comp_level <%= @gzip_comp_level %>;
  gzip_proxied <%= @gzip_proxied %>;
  gzip_types <%= @gzip_types.join(' ') %>;

  include /opt/opscode/embedded/conf/mime.types;

  <%- node['private_chef']['lb']['upstream'].each do |uname, servers| -%>
  upstream <%= uname.sub(/-/, '_') %> {
    <%- servers.each do |server| -%>
    server <%= server %>:<%= node['private_chef'][uname]['port'] %>;
    <%- end -%>
  }
  <%- end -%>

  <%- if node['private_chef']['lb']['enable'] -%>
  proxy_cache_path  <%= File.join(@dir, "cache") %> levels=1:2 keys_zone=webui-cache:50m max_size=<%= @cache_max_size %> inactive=600m;
  proxy_temp_path <%= File.join(@dir, "cache-tmp") %>;
  <%-   unless @non_ssl_port.nil? -%>
  server {
    listen <%= @non_ssl_port %>;
    server_name <%= @server_name %>;
    <%- if @enable_non_ssl -%>
    access_log /var/log/opscode/nginx/access-port-<%= @non_ssl_port %>.log;
    root <%= File.join(@dir, "html") %>;

		client_max_body_size <%= @client_max_body_size %>;

    proxy_set_header Host $host; 
    proxy_set_header X-Real-IP $remote_addr; 
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
    proxy_set_header X-Forwarded-Proto https; 
    proxy_pass_request_headers on;
    proxy_connect_timeout   1;
    proxy_send_timeout      300;
    proxy_read_timeout      300;

    error_page 404 =404 /404.html;
    error_page 503 =503 /503.json;

    #location /nginx_status {
      #stub_status on;
      #access_log   off;
      #allow 127.0.0.1;
      #deny all;
      #}

    location /version {
      types { }
      default_type text/plain;
      alias /opt/opscode/pc-version.txt;
    }

    location /docs {
      index index.html ;
      alias /opt/opscode/docs;
    }

    location /checksum/ {
      internal;
      root <%= node['private_chef']['opscode-chef']['checksum_path'].gsub('checksum', '') %>; 
    }

    location ~ "^/organizations/[a-z0-9\-_]+?/.*?/_acl.*$" {
<%= select_upstream("opscode_account") %>
    }

    location ~ "^/organizations/[a-z0-9\-_]+?/(?:search)/.+$" {
<%= select_upstream("opscode_erchef") %>
    }

    # backwards compatible for Chef 0.9.x and below clients
    # the nodes/:node_name/cookbooks is still handled by Ruby-Chef
    location ~ "^/organizations/[a-z0-9\-_]+?/nodes/[^/]+/cookbooks$" {
<%= select_upstream("opscode_chef") %>
    }

    # nodes go to erchef
    location ~ "^/organizations/[a-z0-9\-_]+?/nodes/{0,1}.*$" {
<%= select_upstream("opscode_erchef") %>
    }

    location ~ "^/organizations/[a-z0-9\-_]+?/environments/[^/]+/nodes$" {
<%= select_upstream("opscode_erchef") %>
    }

<% if !node['private_chef']['dark_launch']['couchdb_roles'] %>
    # roles go to erchef
    location ~ "^/organizations/[a-z0-9\-_]+?/roles/{0,1}.*$" {
<%= select_upstream("opscode_erchef") %>
    }
<% end %>

<% if !node['private_chef']['dark_launch']['couchdb_data'] %>
    # data (data_bags, data_bag_items go to erchef
    location ~ "^/organizations/[a-z0-9\-_]+?/data/{0,1}.*$" {
<%= select_upstream("opscode_erchef") %>
    }
<% end %>

    # search index request
    location ~ "^/organizations/[a-z0-9\-_]+?/(?:search)/?$" {
<%= select_upstream("opscode_erchef") %>
    }

<%- if node['private_chef']['lb']['cache_cookbook_files'] -%>    
    location ~ "^/organizations/[a-z0-9\-_]+?/cookbooks/[\w\.]+/(\d+\.\d+\.\d+|_latest)/files/.+$" {
<%= select_upstream("#{node['private_chef']['opscode-chef']['upload_vip']}:#{node['private_chef']['opscode-chef']['upload_port']}", "opscode_webui", node['private_chef']['opscode-chef']['upload_proto']) %>
      proxy_cache webui-cache;
      proxy_cache_valid 200 300m;
    }

<%- end -%>
    location ~ "^/organizations/[a-z0-9\-_]+?/(?:cookbooks|sandboxes)/{0,1}.*$" {
<%= select_upstream("#{node['private_chef']['opscode-chef']['upload_vip']}:#{node['private_chef']['opscode-chef']['upload_port']}", "opscode_webui", node['private_chef']['opscode-chef']['upload_proto']) %>
    }

    location ~ "^/organizations/[a-z0-9\-_]+?/(?:nodes|status|search|cookbooks|data|roles|sandboxes|environments)/{0,1}.*$" {
<%= select_upstream("opscode_chef") %>
    }

    location ~ "^/organizations/[a-z0-9\-_]+?/(?:groups|users|clients|containers|association_requests)/{0,1}.*$" {
<%= select_upstream("opscode_account") %>
    }

    location ~ "^/(?:organizations|users)/{0,1}$" {
<%= select_upstream("opscode_account") %>
    }

    location ~ "^/organizations/[a-z0-9\-_]+/{0,1}$" {
<%= select_upstream("opscode_account") %>
    }

    location ~ "^/users/[a-z0-9\-_]+/{0,1}$" {
<%= select_upstream("opscode_account") %>
    }

    location ~ "^/users/[a-z0-9\-_]+/{0,1}/association_requests/{0,1}.*$" {
<%= select_upstream("opscode_account") %>
    }

    location ~ "^/users/[a-z0-9\-_]+/organizations/{0,1}$" {
<%= select_upstream("opscode_account") %>
    }

    location ~ "^/verify_password$" {
<%= select_upstream("opscode_account") %>
    }

    location ~ "^/authenticate_user$" {
<%= select_upstream("opscode_account") %>
    }

    location ~ "^/(?:stylesheets|javascripts|images|facebox|css)/{0,1}.*$" {
      if ($http_x_chef_version ~* "^(\d+\.\d+?)\..+$") {
        error_page 400 =400 /400-chef_client_manage.json;
        return 400;
      }
      proxy_pass http://opscode_webui;
      proxy_pass_request_headers off;
      proxy_cache webui-cache;
      proxy_cache_valid 200 302 300m;
      proxy_cache_valid 404 1m;
    }
    
    location / {
      # any request from a chef client that reaches this point 
      # is for a resource/route that doesn't exist.
      if ($http_x_chef_version ~* "^(\d+\.\d+?)\..+$") {
         error_page 404 =404 /404.json;
         return 404;
      }

      proxy_pass http://opscode_webui; 
    }
    <%- else -%>
    access_log /var/log/opscode/nginx/rewrite-port-<%= @non_ssl_port %>.log;
    rewrite ^(.*) https://$server_name$1 permanent;
    <%- end -%>
  }
  <%-  end %>

  server { 
    listen <%= @ssl_port %>; 
    server_name <%= @server_name %>; 
    access_log /var/log/opscode/nginx/access.log opscode;
    ssl on; 
    ssl_certificate <%= @ssl_certificate %>;
    ssl_certificate_key <%= @ssl_certificate_key %>;

    ssl_session_timeout 5m; 

    ssl_protocols <%= node['private_chef']['nginx']['ssl_protocols'] %>;
    ssl_ciphers <%= node['private_chef']['nginx']['ssl_ciphers'] %>; 
    ssl_prefer_server_ciphers on; 

    root <%= File.join(@dir, "html") %>;

		client_max_body_size <%= @client_max_body_size %>;

    proxy_set_header Host $host; 
    proxy_set_header X-Real-IP $remote_addr; 
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
    proxy_set_header X-Forwarded-Proto https; 
    proxy_pass_request_headers on;
    proxy_connect_timeout   1;
    proxy_send_timeout      300;
    proxy_read_timeout      300;

    error_page 404 =404 /404.html;
    error_page 503 =503 /503.json;

    #location /nginx_status {
      #stub_status on;
      #access_log   off;
      #allow 127.0.0.1;
      #deny all;
      #}

    location /version {
      types { }
      default_type text/plain;
      alias /opt/opscode/pc-version.txt;
    }

    location /docs {
      index index.html ;
      alias /opt/opscode/docs;
    }

    location /checksum/ {
      internal;
      root <%= node['private_chef']['opscode-chef']['checksum_path'].gsub('checksum', '') %>; 
    }

    location ~ "^/organizations/[a-z0-9\-_]+?/.*?/_acl.*$" {
<%= select_upstream("opscode_account") %>
    }

    location ~ "^/organizations/[a-z0-9\-_]+?/(?:search)/.+$" {
<%= select_upstream("opscode_erchef") %>
    }

    # backwards compatible for Chef 0.9.x and below clients
    # the nodes/:node_name/cookbooks is still handled by Ruby-Chef
    location ~ "^/organizations/[a-z0-9\-_]+?/nodes/[^/]+/cookbooks$" {
<%= select_upstream("opscode_chef") %>
    }

    # nodes goes to erchef
    location ~ "^/organizations/[a-z0-9\-_]+?/nodes/{0,1}.*$" {
<%= select_upstream("opscode_erchef") %>
    }

    location ~ "^/organizations/[a-z0-9\-_]+?/environments/[^/]+/nodes$" {
<%= select_upstream("opscode_erchef") %>
    }

<% if !node['private_chef']['dark_launch']['couchdb_roles'] %>
    # roles go to erchef
    location ~ "^/organizations/[a-z0-9\-_]+?/roles/{0,1}.*$" {
<%= select_upstream("opscode_erchef") %>
    }
<% end %>

<% if !node['private_chef']['dark_launch']['couchdb_data'] %>
    # data (data_bags, data_bag_items go to erchef
    location ~ "^/organizations/[a-z0-9\-_]+?/data/{0,1}.*$" {
<%= select_upstream("opscode_erchef") %>
    }
<% end %>

    # search index request
    location ~ "^/organizations/[a-z0-9\-_]+?/(?:search)/?$" {
<%= select_upstream("opscode_erchef") %>
    }

<%- if node['private_chef']['lb']['cache_cookbook_files'] -%>    
    location ~ "^/organizations/[a-z0-9\-_]+?/cookbooks/[\w\.]+/(\d+\.\d+\.\d+|_latest)/files/.+$" {
<%= select_upstream("#{node['private_chef']['opscode-chef']['upload_vip']}:#{node['private_chef']['opscode-chef']['upload_port']}", "opscode_webui", node['private_chef']['opscode-chef']['upload_proto']) %>
      proxy_cache webui-cache;
      proxy_cache_valid 200 300m;
    }

<%- end -%>
    location ~ "^/organizations/[a-z0-9\-_]+?/(?:cookbooks|sandboxes)/{0,1}.*$" {
<%= select_upstream("#{node['private_chef']['opscode-chef']['upload_vip']}:#{node['private_chef']['opscode-chef']['upload_port']}", "opscode_webui", node['private_chef']['opscode-chef']['upload_proto']) %>
    }

    location ~ "^/organizations/[a-z0-9\-_]+?/(?:nodes|status|search|cookbooks|data|roles|sandboxes|environments)/{0,1}.*$" {
<%= select_upstream("opscode_chef") %>
    }

    location ~ "^/organizations/[a-z0-9\-_]+?/(?:groups|users|clients|containers|association_requests)/{0,1}.*$" {
<%= select_upstream("opscode_account") %>
    }

    location ~ "^/(?:organizations|users)/{0,1}$" {
<%= select_upstream("opscode_account") %>
    }

    location ~ "^/organizations/[a-z0-9\-_]+/{0,1}$" {
<%= select_upstream("opscode_account") %>
    }

    location ~ "^/users/[a-z0-9\-_]+/{0,1}$" {
<%= select_upstream("opscode_account") %>
    }

    location ~ "^/users/[a-z0-9\-_]+/{0,1}/association_requests/{0,1}.*$" {
<%= select_upstream("opscode_account") %>
    }

    location ~ "^/users/[a-z0-9\-_]+/organizations/{0,1}$" {
<%= select_upstream("opscode_account") %>
    }

    location ~ "^/verify_password$" {
<%= select_upstream("opscode_account") %>
    }

    location ~ "^/(?:stylesheets|javascripts|images|facebox|css)/{0,1}.*$" {
      if ($http_x_chef_version ~* "^(\d+\.\d+?)\..+$") {
        error_page 400 =400 /400-chef_client_manage.json;
        return 400;
      }
      proxy_pass http://opscode_webui;
      proxy_pass_request_headers off;
      proxy_cache webui-cache;
      proxy_cache_valid 200 302 300m;
      proxy_cache_valid 404 1m;
    }
    
    location / {
      # any request from a chef client that reaches this point 
      # is for a resource/route that doesn't exist.
      if ($http_x_chef_version ~* "^(\d+\.\d+?)\..+$") {
         error_page 404 =404 /404.json;
         return 404;
      }

      proxy_pass http://opscode_webui; 
    }
  }
  <%- end -%>
  <%- if node['private_chef']['lb_internal']['enable'] -%> 
  server {
    listen <%= node['private_chef']['lb_internal']['chef_port'] %>;
    # The name doesn't matter; this is the only listener on this port
    server_name <%= node['fqdn'] %>;

		client_max_body_size <%= @client_max_body_size %>;
    proxy_set_header        Host            $host;
    proxy_set_header        X-Real-IP       $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto http;
    proxy_set_header        X-Forwarded-Host $http_host;
    proxy_pass_request_headers on;
    proxy_connect_timeout   90;
    proxy_send_timeout      90;
    proxy_read_timeout      90;

    access_log /var/log/opscode/nginx/internal-chef.access.log opscode;
    error_log  /var/log/opscode/nginx/internal-chef.error.log<%= node['private_chef']['lb']['debug'] ? " debug" : "" %>;

    location /checksum/ {
      internal;
      root <%= node['private_chef']['opscode-chef']['checksum_path'].gsub('checksum', '') %>; 
    }

    # search goes to erchef
    location ~ "^/organizations/[a-z0-9\-_]+?/(?:search)/.+$" {
        proxy_redirect http://opscode_erchef /;
        proxy_pass http://opscode_erchef;
    }

    # backwards compatible for Chef 0.9.x and below clients
    # the nodes/:node_name/cookbooks is still handled by Ruby-Chef
    location ~ "^/organizations/[a-z0-9\-_]+?/nodes/[^/]+/cookbooks$" {
        proxy_redirect http://opscode_chef /;
        proxy_pass http://opscode_chef;
    }

    # nodes goes to erchef
    location ~ "^/organizations/[a-z0-9\-_]+?/nodes/{0,1}.*$" {
      proxy_redirect http://opscode_erchef /;
      proxy_pass http://opscode_erchef;
    }

    location ~ "^/organizations/[a-z0-9\-_]+?/environments/[^/]+/nodes$" {
      proxy_redirect http://opscode_erchef /;
      proxy_pass http://opscode_erchef;
    }

<% if !node['private_chef']['dark_launch']['couchdb_roles'] %>
    # roles go to erchef
    location ~ "^/organizations/[a-z0-9\-_]+?/roles/{0,1}.*$" {
<%= select_upstream("opscode_erchef") %>
    }
<% end %>

<% if !node['private_chef']['dark_launch']['couchdb_data'] %>
    # data (data_bags, data_bag_items go to erchef
    location ~ "^/organizations/[a-z0-9\-_]+?/data/{0,1}.*$" {
<%= select_upstream("opscode_erchef") %>
    }
<% end %>

    # search index request
    location ~ "^/organizations/[a-z0-9\-_]+?/(?:search)/?$" {
<%= select_upstream("opscode_erchef") %>
    }

    # cookbooks must go to the vip running opscode-chef directly (webui hits this)
    location ~ "^/organizations/[a-z0-9\-_]+?/(?:cookbooks|sandboxes)/{0,1}.*$" {
      set $my_upstream <%= node['private_chef']['opscode-chef']['upload_internal_vip'] %>:<%= node['private_chef']['opscode-chef']['upload_internal_port'] %>;
			proxy_redirect <%= node['private_chef']['opscode-chef']['upload_internal_proto'] %>://$my_upstream /;
			proxy_pass <%= node['private_chef']['opscode-chef']['upload_internal_proto'] %>://$my_upstream;
    }

    location / {
      proxy_redirect http://opscode_chef /;
      proxy_pass http://opscode_chef;
    }
  }

  server {
    listen <%= node['private_chef']['lb_internal']['account_port'] %>;
    # The name doesn't matter; this is the only listener on this port
    server_name <%= node['fqdn'] %>;

		client_max_body_size <%= @client_max_body_size %>;
    proxy_set_header        Host            $host;
    proxy_set_header        X-Real-IP       $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto http;
    proxy_set_header        X-Forwarded-Host $http_host;
    proxy_pass_request_headers on;
    proxy_connect_timeout   90;
    proxy_send_timeout      90;
    proxy_read_timeout      90;

    access_log /var/log/opscode/nginx/internal-account.access.log opscode;
    error_log  /var/log/opscode/nginx/internal-account.error.log<%= node['private_chef']['lb']['debug'] ? " debug" : "" %>;

    location / {
      proxy_pass http://opscode_account;
    }
  }

  server {
    listen <%= node['private_chef']['lb_internal']['authz_port'] %>;
    server_name <%= node['fqdn'] %>;

		client_max_body_size <%= @client_max_body_size %>;
    proxy_set_header        Host            $host;
    proxy_set_header        X-Real-IP       $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto http;
    proxy_set_header        X-Forwarded-Host $http_host;
    proxy_pass_request_headers on;

    proxy_connect_timeout   90;
    proxy_send_timeout      90;
    proxy_read_timeout      90;

    access_log /var/log/opscode/nginx/internal-authz.access.log opscode;
    error_log  /var/log/opscode/nginx/internal-authz.error.log<%= node['private_chef']['lb']['debug'] ? " debug" : "" %>;

    location / {
      proxy_pass http://opscode_authz;
    }
  }
  <%- end -%>
  <%- if node['private_chef']['nagios']['enable'] -%>
  server {
    listen   <%= node['private_chef']['nagios']['port'] %>;
    server_name <%= node['fqdn'] %>;

    access_log /var/log/opscode/nginx/nagios.access.log;
    error_log  /var/log/opscode/nginx/nagios.error.log<%= node['private_chef']['lb']['debug'] ? " debug" : "" %>;

    auth_basic            "Private Chef Nagios";
    auth_basic_user_file  <%= File.join(node['private_chef']['nagios']['dir'], "etc", "htpasswd") %>;

    location / {
      root   /opt/opscode/embedded/nagios/share/;
      index  index.php;
    }

    location /nagios {
      index index.php;
      alias /opt/opscode/embedded/nagios/share/;
    }

    location /cgi-bin {
      alias /opt/opscode/embedded/nagios/sbin;
    }

    location ~ ^/nagios/(.*\.php)$ {
      alias /opt/opscode/embedded/nagios/share/$1;
      include <%= File.join(@dir, "etc", "fastcgi.conf") %>;
      fastcgi_pass 127.0.0.1:<%= node['private_chef']['nagios']['php_fpm_port'] %>;
    }

    location ~ \.cgi$ {
      root /opt/opscode/embedded/nagios/sbin;
      rewrite ^/nagios/cgi-bin/(.*)\.cgi /$1.cgi break;
      include <%= File.join(@dir, "etc", "fastcgi.conf") %>;
      fastcgi_param AUTH_USER $remote_user;
      fastcgi_param REMOTE_USER $remote_user;
      fastcgi_param DOCUMENT_ROOT  /opt/opscode/embedded/nagios/sbin;
      fastcgi_param SCRIPT_FILENAME    $fastcgi_script_name;
      fastcgi_pass 127.0.0.1:<%= node['private_chef']['nagios']['fcgiwrap_port'] %>;
    }  

    location ~ \.php$ {
      include <%= File.join(@dir, "etc", "fastcgi.conf") %>;
      fastcgi_pass 127.0.0.1:<%= node['private_chef']['nagios']['php_fpm_port'] %>;
    }  

  }
  <%- end -%>
}
