user <%= node['private_chef']['user']['username'] %> <%= node['private_chef']['user']['username']%>;
worker_processes <%= @worker_processes %>;
error_log /var/log/opscode/nginx/error.log<%= node['private_chef']['lb']['debug'] ? " debug" : "" %>;

daemon off;

events {
  worker_connections <%= @worker_connections %>;
}

http {
  log_format opscode '$remote_addr - $remote_user [$time_local]  '
                    '"$request" $status "$request_time" $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" "$upstream_addr" "$upstream_status" "$upstream_response_time" "$http_x_chef_version" "$http_x_ops_sign" "$http_x_ops_userid" "$http_x_ops_timestamp" "$http_x_ops_content_hash" $request_length';

  sendfile <%= @sendfile %>;
  tcp_nopush <%= @tcp_nopush %>;
  tcp_nodelay <%= @tcp_nodelay %>;

  keepalive_timeout <%= @keepalive_timeout %>;

  gzip <%= @gzip %>;
  gzip_http_version <%= @gzip_http_version %>;
  gzip_comp_level <%= @gzip_comp_level %>;
  gzip_proxied <%= @gzip_proxied %>;
  gzip_types <%= @gzip_types.join(' ') %>;

  include /opt/opscode/embedded/conf/mime.types;

  <%- node['private_chef']['lb']['upstream'].each do |uname, servers| -%>
  upstream <%= uname.sub(/-/, '_') %> {
    <%- servers.each do |server| -%>
    server <%= server %>:<%= node['private_chef'][uname]['port'] %>;
    <%- end -%>
  }
  <%- end -%>

  # Include upstream definitions for addons
  include <%= node['private_chef']['nginx']['dir'] %>/etc/addon.d/*_upstreams.conf;

  # external lb config for Chef API
  <%- if node['private_chef']['lb']['enable'] -%>
    proxy_cache_path  <%= File.join(@dir, "cache") %> levels=1:2 keys_zone=webui-cache:50m max_size=<%= @cache_max_size %> inactive=600m;
    proxy_temp_path <%= File.join(@dir, "cache-tmp") %>;

    # We support three options: serve nothing on non_ssl_port (80),
    # redirect to https, or actually serve the API.
    <%- if @non_ssl_port -%>
      <%- if @enable_non_ssl -%>
        include <%= @chef_http_config %>;
      <%- else -%>
          server {
            listen <%= @helper.listen_port('http') %>;
            server_name <%= @server_name %>;
            access_log /var/log/opscode/nginx/rewrite-port-80.log;
            rewrite ^(.*) https://$server_name$1 permanent;
          }
      <%- end -%>
    <%-  end %>

    # Chef HTTPS API
    include <%= @chef_https_config %>;
  <%- end -%>

  # internal lb config for Chef API Services
  <%- if node['private_chef']['lb_internal']['enable'] -%>
  server {
    listen <%= @helper.listen_port(node['private_chef']['lb_internal']['chef_port']) %>;
    # The name doesn't matter; this is the only listener on this port
    server_name <%= node['fqdn'] %>;

    client_max_body_size <%= @client_max_body_size %>;
    proxy_set_header        Host            $host;
    proxy_set_header        X-Real-IP       $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto http;
    proxy_set_header        X-Forwarded-Host $http_host;
    proxy_pass_request_headers on;
    proxy_connect_timeout   90;
    proxy_send_timeout      90;
    proxy_read_timeout      90;

    access_log /var/log/opscode/nginx/internal-chef.access.log opscode;
    error_log  /var/log/opscode/nginx/internal-chef.error.log<%= node['private_chef']['lb']['debug'] ? " debug" : "" %>;

    # search requests
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/(?:search)/.+$") %>
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/(?:search)/?$") %>

    # erchef
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/nodes/{0,1}.*$") %>
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/environments/[^/]+/nodes$") %>
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/roles/{0,1}.*$") %>
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/data/{0,1}.*$") %>
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/environments/{0,1}.*$") %>
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/cookbooks/{0,1}.*$") %>
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/sandboxes/{0,1}.*$") %>
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/clients/{0,1}.*$") %>
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/principals/{0,1}.*$") %>

    # Include internal routes for addons
    include <%= node['private_chef']['nginx']['dir'] %>/etc/addon.d/*_internal.conf;

    location / {
      proxy_redirect http://opscode_erchef /;
      proxy_pass http://opscode_erchef;
    }
  }

  # internal service access for opscode-account
  server {
    listen <%= @helper.listen_port(node['private_chef']['lb_internal']['account_port']) %>;
    # The name doesn't matter; this is the only listener on this port
    server_name <%= node['fqdn'] %>;

    client_max_body_size <%= @client_max_body_size %>;
    proxy_set_header        Host            $host;
    proxy_set_header        X-Real-IP       $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto http;
    proxy_set_header        X-Forwarded-Host $http_host;
    proxy_pass_request_headers on;
    proxy_connect_timeout   90;
    proxy_send_timeout      90;
    proxy_read_timeout      90;

    access_log /var/log/opscode/nginx/internal-account.access.log opscode;
    error_log  /var/log/opscode/nginx/internal-account.error.log<%= node['private_chef']['lb']['debug'] ? " debug" : "" %>;

    # This is currently needed ONLY for webui 1.  It issues calls
    # directly to opscode_account for for retrieving and interacting
    # with clients, but this is now handled by erchef.
    <%= @helper.chef_api("^/organizations/[a-z0-9\-_]+?/clients/{0,1}.*$") %>

    location / {
      proxy_pass http://opscode_account;
    }
  }

  # internal service access for oc_bifrost
  server {
    listen <%= @helper.listen_port(node['private_chef']['lb_internal']['oc_bifrost_port']) %>;
    server_name <%= node['fqdn'] %>;

    client_max_body_size <%= @client_max_body_size %>;
    proxy_set_header        Host            $host;
    proxy_set_header        X-Real-IP       $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto http;
    proxy_set_header        X-Forwarded-Host $http_host;
    proxy_pass_request_headers on;

    proxy_connect_timeout   90;
    proxy_send_timeout      90;
    proxy_read_timeout      90;

    access_log /var/log/opscode/nginx/internal-authz.access.log opscode;
    error_log  /var/log/opscode/nginx/internal-authz.error.log<%= node['private_chef']['lb']['debug'] ? " debug" : "" %>;

    location / {
      proxy_pass http://oc_bifrost;
    }
  }
  <%- end -%>

  include <%= node['private_chef']['nginx']['dir'] %>/etc/nginx.d/*.conf;
}
