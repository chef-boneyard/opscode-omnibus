%% -*- mode: erlang -*-
%% -*- tab-width: 4;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et
[
 %% SASL config
 {sasl, [
         {sasl_error_logger, {file, "<%= File.join(@log_directory, 'sasl-error.log') %>"}},
         {errlog_type, error},
         {error_logger_mf_dir, "<%= File.join(@log_directory, 'sasl') %>"},      % Log directory
         {error_logger_mf_maxbytes, <%= @log_rotation['file_maxbytes'] %>},
         {error_logger_mf_maxfiles, <%= @log_rotation['num_to_keep'] %>}
        ]},
 {fast_log, [
             {loggers, [[{name, erchef},
                         {file, "<%= File.join(@log_directory, 'erchef.log') %>"},
                         {files, <%= @log_rotation['num_to_keep'] %>},
                         {file_size, <%= (@log_rotation['file_maxbytes'].to_f/1024/1024).round %>}]]}
            ]},
 {oc_chef_wm, [
              {api_version, "<%= node['private_chef']['api_version'] %>"},
              {server_flavor, "<%= node['private_chef']['flavor'] %>"},

              {ip, "<%= @listen %>"},
              {port, <%= @port %>},
              {reqid_header_name, "X-Request-Id"},
              {auth_skew, <%= @auth_skew %>},
              %% currently only used by the search endpoint to bound
              %% how many nodes are deserialized at a time in
              %% preparing a response.
              {bulk_fetch_batch_size, <%= @bulk_fetch_batch_size %>},
	      {superusers, [<<"pivotal">>]},
              %% metrics config
              {root_metric_key, "<%= @root_metric_key %>"},

              {authz_timeout, <%= node['private_chef']['opscode-erchef']['authz_timeout'] %>},
              {authz_fanout, <%= node['private_chef']['opscode-erchef']['authz_fanout'] %>}
             ]},
  {chef_wm, [
             {server_version, "<%= node['private_chef']['version'] %>"},
             {health_ping_timeout, 400},
             {health_ping_modules, [oc_chef_authz, chef_otto, chef_sql, chef_solr]},
             {bulk_fetch_batch_size, <%= @bulk_fetch_batch_size %>}
            ]},
  {chef_authn, [
                {keyring, [{default, "/etc/opscode/webui_pub.pem"}]}
               ]},
  {oc_chef_authz, [
                {authz_root_url, "http://<%= node['private_chef']['oc_bifrost']['vip'] %>:<%= node['private_chef']['oc_bifrost']['port'] %>" },
                {authz_service, [{root_url, "http://<%= node['private_chef']['oc_bifrost']['vip'] %>:<%= node['private_chef']['oc_bifrost']['port'] %>" },
                                 {timeout, 2000},
                                 {init_count, <%= node['private_chef']['oc_chef_authz']['http_init_count'] %>},
                                 {max_count, <%= node['private_chef']['oc_chef_authz']['http_max_count'] %>},
                                 {cull_interval, <%= node['private_chef']['oc_chef_authz']['http_cull_interval'] %>},
                                 {max_age, <%= node['private_chef']['oc_chef_authz']['http_max_age'] %>},
                                 {max_connection_duration, <%= node['private_chef']['oc_chef_authz']['http_max_connection_duration'] %>},
                                 {ibrowse_options, <%= node['private_chef']['oc_chef_authz']['ibrowse_options'] %>}
                                 ]},
                {couchdb_host, "<%= node['private_chef']['couchdb']['vip'] %>"},
                {couchdb_port, <%= node['private_chef']['couchdb']['port'] %> },
                {authz_superuser_id, <<"<%= node['private_chef']['oc_bifrost']['superuser_id'] %>">>}
               ]},
  {chef_db, [
             {bulk_fetch_batch_size, <%= @bulk_fetch_batch_size %>},
             {cache_defaults, [{max_size, <%= @max_cache_size %> },
                                  {ttl, <%= @cache_ttl %> }]},
             {couchdb_host, "<%= node['private_chef']['couchdb']['vip'] %>"},
             {couchdb_port, <%= node['private_chef']['couchdb']['port'] %> }
            ]},
  {chef_index, [
                {rabbitmq_host, "<%= node['private_chef']['rabbitmq']['vip'] %>"},
                {rabbitmq_port, <%= node['private_chef']['rabbitmq']['node_port'] %> },
                {rabbitmq_user, <<"<%= node['private_chef']['rabbitmq']['user'] %>">>},
                {rabbitmq_password, <<"<%= node['private_chef']['rabbitmq']['password'] %>">>},
                {rabbitmq_vhost, <<"<%= node['private_chef']['rabbitmq']['vhost'] %>">>},
                {rabbitmq_exchange, <<"">>},
                {solr_url, "http://<%= node['private_chef']['opscode-solr']['vip'] %>:<%= node['private_chef']['opscode-solr']['port'] %>/solr"}
               ]},
  {chef_objects, [
                  {certificate_root_url, "http://<%= node['private_chef']['opscode-certificate']['vip'] %>:<%= node['private_chef']['opscode-certificate']['port'] %>/certificates"},
                  {s3_access_key_id, "<%= node['private_chef']['bookshelf']['access_key_id'] %>"},
                  {s3_secret_key_id, "<%= node['private_chef']['bookshelf']['secret_access_key'] %>"},
                  {s3_url, "<%= node['private_chef']['nginx']['x_forwarded_proto'] %>://<%= node['private_chef']['bookshelf']['vip'] %>"},
                  {s3_platform_bucket_name, "<%= node['private_chef']['opscode-erchef']['s3_bucket'] %>"},
                  {s3_url_ttl, <%= node['private_chef']['opscode-erchef']['s3_url_ttl'] %>},
                  {s3_parallel_ops_timeout, <%= node['private_chef']['opscode-erchef']['s3_parallel_ops_timeout'] %>},
                  {s3_parallel_ops_fanout, <%= node['private_chef']['opscode-erchef']['s3_parallel_ops_fanout'] %>},
                  {depsolver_timeout, <%= @depsolver_timeout %>}
                 ]},
  {stats_hero, [
               %% Set sender pool size to DB max_connections to avoid contention
               {udp_socket_pool_size, <%= node['private_chef']['postgresql']['max_connections'] %> },
               {estatsd_host, "<%= node['private_chef']['estatsd']['vip'] %>"},
               {estatsd_port, <%= node['private_chef']['estatsd']['port'] %>}
              ]},
  {sqerl, [
           %% The database system you are using (e.g. pgsql)
           {db_type, pgsql },

           %% Database connection parameters
           {db_host, "<%= node['private_chef']['postgresql']['vip'] %>"},
           {db_port, 5432},
           {db_user, "<%= node['private_chef']['postgresql']['sql_user'] %>"},
           {db_pass, "<%= node['private_chef']['postgresql']['sql_password'] %>"},
           {db_name, "opscode_chef" },
           {idle_check, 10000},

           {prepared_statements, {oc_chef_sql, statements, [pgsql]}},
           {column_transforms,
                              [{<<"created_at">>,
                                {sqerl_transformers, convert_YMDHMS_tuple_to_datetime}},
                               {<<"updated_at">>,
                                {sqerl_transformers, convert_YMDHMS_tuple_to_datetime}}]
           }
          ]},
  {webmachine, [
          {log_handlers, [
               {oc_wm_request_logger, [
                       {file, "<%= File.join(@log_directory, 'requests.log') %>"},
                       {file_size, <%= (@log_rotation['file_maxbytes'].to_f/1024/1024).round %>},  %% Size in MB
                       {files, <%= @log_rotation['num_to_keep'] %>},
                       {annotations, [req_id, org_name, msg, darklaunch, perf_stats]}
                       ]
                      }]}]
      },
  {ibrowse, [
             {default_max_sessions, <%= @ibrowse_max_sessions %>},
             {default_max_pipeline_size, <%= @ibrowse_max_pipeline_size %>}
            ]},
  {pooler, [
           {pools, [[{name, sqerl},
                     {max_count, <%= @db_pool_size %>},
                     {init_count, <%= @db_pool_size %>},
                     {start_mfa, {sqerl_client, start_link, []}}],
                    [{name, chef_depsolver},
                     {max_count, <%= @depsolver_worker_count %>},
                     {init_count, <%= @depsolver_worker_count %>},
                     {start_mfa, {chef_depsolver_worker, start_link, []}}]]},
           {metrics_module, folsom_metrics}
          ]}

].
