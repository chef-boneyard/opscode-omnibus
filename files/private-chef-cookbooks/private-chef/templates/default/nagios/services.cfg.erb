# Nagios Service Definitions.
#
# Automatically generated by Chef.

define service {
    use                 default-service
    hostgroup_name      all
    service_description ping
    check_command       check_ping!200.0,20%!500.0,60%
}

define service {
    service_description SSH
    hostgroup_name      all
    check_command       check_ssh
    use                 default-service
}

<% if node['private_chef']['database_type'] == "postgresql" -%>
# postgres and drbd on private chef
define service {
    service_description postgresql service
    hostgroup_name      postgresql-vip
    check_command       check_postgresql!<%= node['private_chef']['postgresql']['sql_ro_user'] %>!<%= node['private_chef']['postgresql']['sql_ro_password'] %>
    use                 default-service
}
<% elsif node['private_chef']['database_type'] == "mysql" -%>
define service {
    service_description mysql service
    hostgroup_name      mysql-vip
    check_command       check_mysql!nagios!<%= %>
    use                 default-service
}
<% end -%>

# webui service checks
define service {
    service_description opscode-webui service
    hostgroup_name      opscode-webui-vip
    check_command       check_http_port!<%= node['private_chef']['opscode-webui']['port'] %>
    use                 default-service
}

define service {
    service_description LB HTTPS
    hostgroup_name      lb-vip
    check_command       check_https
    use                 default-service
}

# LBint service checks
# if nginx is up, should return results for chef port...
define service {
    service_description Internal Chef service
    hostgroup_name      lb_internal-vip
    check_command       check_http_port_expect_json!<%= node['private_chef']['lb_internal']['chef_port'] %>!"HTTP/1.1 200 OK"
    use                 default-service
}

# couchdb service checks
define service {
    service_description HTTP CouchDB utils
    hostgroup_name      couchdb-vip
    check_command       check_http_port_path!5984!/_utils/
    use                 default-service
}

define service {
    service_description HTTP CouchDB opscode_account
    hostgroup_name      couchdb-vip
    check_command       check_http_port_path!5984!/opscode_account
    use                 default-service
}

define service {
    service_description CouchDB Available Orgs
    hostgroup_name      couchdb-vip
    check_command       check_avail_orgs!5984!1!5
    use                 default-service
}

define service {
    service_description CouchDB Health Monitor
    hostgroup_name      couchdb-vip
    check_command       check_nrpe!check_couchdb_health
    use                 default-service
}

# authz service checks
define service {
    service_description HTTP AuthZ
    hostgroup_name      opscode-authz
    check_command       check_http_port_expect!<%= node['private_chef']['opscode-authz']['port'] %>!"HTTP/1.1 404 Object Not Found"
    use                 default-service
}

define service {
    service_description HTTP Account
    hostgroup_name      opscode-account-vip
    check_command       check_http_port!<%= node['private_chef']['opscode-account']['port'] %>
    use                 default-service
}

define service {
    service_description HTTP Org Creator
    hostgroup_name      opscode-org-creator
    check_command       check_tcp!4369
    use                 default-service
}


# RabbitMQ checks
define service {
    service_description RabbitMQ Queue Size
    hostgroup_name      rabbitmq-vip
    check_command  check_nrpe!check_rmq_messages
    use                 default-service
}

define service {
    service_description RabbitMQ Connections
    hostgroup_name      rabbitmq-vip
    check_command  check_nrpe!check_rmq_connections
    use                 default-service
}


# opscode-erchef service checks
define service {
    service_description HTTP Opscode Erchef
    hostgroup_name      opscode-erchef-vip
    check_command       check_http_port_path_expect_json!<%= node['private_chef']['opscode-erchef']['port'] %>!"/_status"!"HTTP/1.1 200 OK"
    use                 default-service
}

# Solr
define service {
    service_description Solr
    hostgroup_name      opscode-solr-vip
    check_command  check_http_port_path!<%= node['private_chef']['opscode-solr']['port'] %>!/solr/
    use                 default-service
}

# Opscode Expander checks
define service {
    service_description Opscode Expander Queue Size
    hostgroup_name      opscode-expander
    check_command        check_nrpe!check_opscode_expander
    use                 default-service
    max_check_attempts              6
    check_interval                  60
    retry_interval                  30
}

define service {
    service_description HTTP CouchDB authorization
    hostgroup_name      couchdb-vip
    check_command       check_http_port_path_content!5984!/authorization/_design/access_control_entries/_view/by_acl_and_type?limit=1!total_rows
    use                 default-service
    max_check_attempts  2
}

define service {
    service_description Redis
    hostgroup_name      redis-vip
    check_command       check_redis1
    use                 default-service
}


